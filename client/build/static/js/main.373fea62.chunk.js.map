{"version":3,"sources":["Components/Home.tsx","movies.service.ts","Components/Movies.tsx","Components/NotFound.tsx","Components/UserProfile.tsx","Components/Movie.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","BASE_URL","moviesService","params","a","this","getToken","token","searchParams","URLSearchParams","page","set","toString","q","maxDaysAgo","genre","axios","get","headers","Authorization","response","data","user","firebase","auth","currentUser","getIdToken","id","Enteredcomment","post","comment","timer","Movies","props","location","useLocation","useState","results","setResults","genres","setGenres","pager","setPager","loading","setLoading","useEffect","getGenres","search","document","querySelector","value","explore","searchResults","changePage","_","history","replace","selectGenre","e","target","textContent","toLowerCase","LinearProgress","color","className","Button","variant","onClick","delete","map","Chip","label","TextField","onChange","window","clearTimeout","setTimeout","InputLabelProps","shrink","length","Pagination","currentPage","count","totalPages","ImageList","rowHeight","cols","result","ImageListItem","to","movieId","movie","posterPath","src","alt","title","ImageListItemBar","subtitle","releaseYear","NotFound","UserProfile","classes","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","imageList","transform","titleBar","useStyles","userData","setUserData","undefined","error","setError","wishList","favorites","console","log","uid","messages","item","img","year","photoURL","displayName","email","flexGrow","padding","spacing","margin","maxWidth","image","width","height","maxHeight","Movie","movieData","setMovieData","setComment","getMovieByID","match","fetchData","Paper","Grid","container","movieDetails","ButtonGroup","xs","sm","direction","Typography","gutterBottom","rating","avgRating","starRatedColor","numberOfStars","name","plotSummary","directors","alignItems","director","comments","onSubmit","preventDefault","addComment","alert","type","event","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","App","authenticated","setAuthenticated","onAuthStateChanged","AppBar","position","Toolbar","signOut","exact","path","component","from","firebaseAuth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iPAiBeA,MAjBf,WACE,OACE,gCACE,+EACA,qHAIA,uBACA,iJ,2FCLAC,EAAW,wBA0EJC,EAAgB,I,8HAvE3B,WAAcC,GAAd,mBAAAC,EAAA,sEAMsBC,KAAKC,WAN3B,cAMQC,EANR,OAQQC,EAAe,IAAIC,gBACrBN,EAAOO,MAAMF,EAAaG,IAAI,OAAQR,EAAOO,KAAKE,YAClDT,EAAOU,GAAGL,EAAaG,IAAI,IAAKR,EAAOU,GACvCV,EAAOW,YACTN,EAAaG,IAAI,aAAcR,EAAOW,WAAWF,YAC/CT,EAAOY,OAAOP,EAAaG,IAAI,QAASR,EAAOY,OAbrD,UAeyBC,IAAMC,IAAN,UAClBhB,EADkB,2BACSO,GAC9B,CACEU,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYZ,MApBjC,eAeQa,EAfR,yBAwBSA,EAASC,MAxBlB,iD,qHA2BA,8BAAAjB,EAAA,sEACsBC,KAAKC,WAD3B,cACQC,EADR,gBAGyBS,IAAMC,IAAN,UAAahB,EAAb,kBAAuC,CAC5DiB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYZ,MAN/B,cAGQa,EAHR,yBASSA,EAASC,MATlB,gD,mHAYA,oGAEUC,EAAOC,IAASC,OAAOC,YAFjC,SAGiBH,EAAKI,aAHtB,iGAKW,MALX,yD,uHASA,WAAmBC,GAAnB,iBAAAvB,EAAA,sEACsBC,KAAKC,WAD3B,cACQC,EADR,gBAEyBS,IAAMC,IAAN,UAAahB,EAAb,mBAAgC0B,GAAM,CAC3DT,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYZ,MAL/B,cAEQa,EAFR,yBAQSA,EAASC,MARlB,gD,sHAUA,WAAiBM,EAAYC,GAA7B,iBAAAxB,EAAA,sEACsBC,KAAKC,WAD3B,cACQC,EADR,gBAEyBS,IAAMa,KAAN,UAAc5B,EAAd,mBAAiC0B,EAAjC,aAAgD,CACrET,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYZ,IAE3BuB,QAASF,IAPb,cAEQR,EAFR,yBASSA,EAASC,MATlB,gD,uHCrDEU,EAAQ,KAECC,EAAS,SAACC,GACrB,IAAMC,EAAWC,cACjB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,sBAAC,4BAAAzC,EAAA,sEACwBF,EAAc4C,YADtC,OACO1B,EADP,OAECoB,EAAUpB,GAFX,0CAAD,KAIC,IAEHyB,qBAAU,WACR,sBAAC,sCAAAzC,EAAA,6DACOD,EAAS,IAAIM,gBAAgByB,EAASa,QACtCrC,GAAQP,EAAOc,IAAI,SAAW,EAC9BJ,EAAIV,EAAOc,IAAI,KACfF,EAAQZ,EAAOc,IAAI,SACX+B,SAASC,cAAc,SAC/BC,MAAQrC,EAERL,EAAe,CAAEE,OAAMI,WAAY,MAErCD,GAAKE,YACAP,EAAY,WAEfK,IAAGL,EAAY,EAAQK,GACvBE,IAAOP,EAAY,MAAYO,IAGrC6B,GAAW,GAjBZ,UAkBwB1C,EAAciD,QAAQ3C,GAlB9C,QAkBOY,EAlBP,OAmBCwB,GAAW,GACXF,EAAStB,EAASqB,OAClBH,EAAWlB,EAASgC,eArBrB,2CAAD,KAuBC,CAAClB,EAASa,SAEb,IAqBMM,EAAa,SAACC,EAAQ5C,GAC1B,IAAMP,EAAS,IAAIM,gBAAgByB,EAASa,QAC5C5C,EAAOQ,IAAI,OAAQD,EAAKE,YACxBqB,EAAMsB,QAAQC,QAAd,kBAAiCrD,KAG7BsD,EAAc,SAACC,GACnB,IAAMvD,EAAS,IAAIM,gBAAgByB,EAASa,QAC5C5C,EAAOQ,IAAI,QAAS+C,EAAEC,OAAOC,YAAYC,eACzC5B,EAAMsB,QAAQC,QAAd,kBAAiCrD,KASnC,OACE,gCACE,8BACGwC,EACC,cAACmB,EAAA,EAAD,CAAgBC,MAAM,cAEtB,qBAAKC,UAAU,2BAInB,sBAAKA,UAAU,QAAf,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYH,MAAM,UAAUI,QAjB5B,SAACT,GACrB,IAAMvD,EAAS,IAAIM,gBAAgByB,EAASa,QAC5C5C,EAAOiE,OAAO,SACdnC,EAAMsB,QAAQC,QAAd,kBAAiCrD,KAc7B,yBAGCoC,EAAO8B,KAAI,SAACtD,GACX,OAAO,cAACuD,EAAA,EAAD,CAAkBC,MAAOxD,EAAOoD,QAASV,GAA9B1C,SAItB,cAACyD,EAAA,EAAD,CACED,MAAM,gBACNL,QAAQ,WACRO,SA7DS,SAACf,GACV3B,GACF2C,OAAOC,aAAa5C,GAGtBA,EAAQ6C,YAAW,WACjB,IAAM/D,EAAI6C,EAAEC,OAAOT,MAEb/C,EAAS,IAAIM,gBAAgByB,EAASa,QAEvClC,GAGHV,EAAOQ,IAAI,IAAKE,GAChBV,EAAOQ,IAAI,OAAQ,MAHnBR,EAAOiE,OAAO,KAMhBnC,EAAMsB,QAAQC,QAAd,kBAAiCrD,MAChC,MA4CC0E,gBAAiB,CACfC,QAAQ,KAIXrC,GAASJ,EAAQ0C,OAChB,cAACC,EAAA,EAAD,CACEtE,KAAI,OAAG+B,QAAH,IAAGA,OAAH,EAAGA,EAAiBwC,YACxBC,MAAK,OAAGzC,QAAH,IAAGA,OAAH,EAAGA,EAAiB0C,WACzBV,SAAUpB,IAEV,KAEJ,8BACIV,GAAYN,EAAQ0C,SAAU7C,EAASa,OAErC,KADF,6CAIJ,cAACqC,EAAA,EAAD,CAAWC,UAAW,IAAKC,KAAM,EAAjC,SACGjD,EAAQgC,KAAI,SAACkB,GAAD,OACX,cAACC,EAAA,EAAD,UACE,eAAC,IAAD,CAAMC,GAAI,UAAYF,EAAOG,QAA7B,UACGH,EAAOI,MAAMC,WACZ,qBACEC,IACE,mCAAqCN,EAAOI,MAAMC,WAEpDE,IAAKP,EAAOI,MAAMI,QAGpB,mBAAG/B,UAAU,qBAAb,gCAGF,cAACgC,EAAA,EAAD,CACED,MAAOR,EAAOI,MAAMI,MACpBE,SAAU,+BAAOV,EAAOI,MAAMO,oBAfhBX,EAAOG,cAqB/B,uBACCjD,GAASJ,EAAQ0C,OAChB,cAACC,EAAA,EAAD,CACEtE,KAAI,OAAG+B,QAAH,IAAGA,OAAH,EAAGA,EAAiBwC,YACxBC,MAAK,OAAGzC,QAAH,IAAGA,OAAH,EAAGA,EAAiB0C,WACzBV,SAAUpB,IAEV,SCrKG8C,EAAW,WACtB,OAAO,4C,SCUIC,EAAc,SAACnE,GAC1B,IAqBMoE,EArBYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,eAAgB,eAChBC,SAAU,SACVC,gBAAiBN,EAAMO,QAAQC,WAAWC,OAE5CC,UAAW,CACTP,SAAU,SAEVQ,UAAW,iBAEbnB,MAAO,CACLhC,MAAO,SAEToD,SAAU,CACRJ,WAAY,YAIAK,GAChB,EAAsBhF,mBAASb,IAASC,OAAOC,aAAxCA,EAAP,oBACA,EAA8BW,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAgCR,mBAAS,MAAzC,mBAAOiF,EAAP,KAAiBC,EAAjB,KACA,EAA0BlF,wBAASmF,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACIC,EAAW,KACXC,EAAY,KAEhB9E,qBAAU,WACR,sBAAC,8BAAAzC,EAAA,6DACCwH,QAAQC,IAAIR,GACZO,QAAQC,IAAIpG,GAFb,SAIGmB,GAAW,GAJd,SAK0B5B,IAAMC,IAAN,iBAAoBQ,EAAYqG,MAL1D,gBAKWzG,EALX,EAKWA,KACRuG,QAAQC,IAAIxG,GACZiG,EAAYjG,GACZuB,GAAW,GARd,kDAUG6E,EAAS,KAAEM,UACXH,QAAQC,IAAIL,GAXf,yDAAD,KAcC,CAAC/F,EAAa4F,EAAUG,IA8D3B,OAhBIH,EAASK,WACXA,EACEL,GACAA,EAASK,SAASrD,KAAI,SAAC2D,GACrB,OAhDqBzC,EAgDIyC,EA9C3B,cAACxC,EAAA,EAAD,UACE,eAAC,IAAD,CAAMC,GAAI,UAAYF,EAAOG,QAA7B,UACGH,EAAO0C,IACN,qBAAKpC,IAAKN,EAAO0C,IAAKnC,IAAKP,EAAOQ,QAElC,mBAAG/B,UAAU,qBAAb,gCAGF,cAACgC,EAAA,EAAD,CACED,MAAK,UAAKR,EAAOQ,MAAZ,aAAsBR,EAAO2C,KAA7B,KACL7B,QAAS,CACPG,KAAMH,EAAQc,SACdpB,MAAOM,EAAQN,aAZHR,EAAOG,SAFL,IAACH,MAoDvB8B,EAASM,YACXA,EACEN,GACAA,EAASM,UAAUtD,KAAI,SAAC2D,GACtB,OAlCoBzC,EAkCIyC,EAhC1B,cAACxC,EAAA,EAAD,UACE,eAAC,IAAD,CAAMC,GAAI,UAAYF,EAAOG,QAA7B,UACGH,EAAO0C,IACN,qBAAKpC,IAAKN,EAAO0C,IAAKnC,IAAKP,EAAOQ,QAElC,mBAAG/B,UAAU,qBAAb,gCAGF,cAACgC,EAAA,EAAD,CACED,MAAK,UAAKR,EAAOQ,MAAZ,aAAsBR,EAAO2C,KAA7B,KACL7B,QAAS,CACPG,KAAMH,EAAQc,SACdpB,MAAOM,EAAQN,aAZHR,EAAOG,SAFN,IAACH,MAuCxB,gCACE,8BACG5C,EACC,cAACmB,EAAA,EAAD,CAAgBC,MAAM,cAEtB,qBAAKC,UAAU,2BAGnB,sBAAKA,UAAU,iBAAf,UACE,qBAAK6B,IAAKpE,EAAY0G,SAAUrC,IAAI,YACpC,uCAAUrE,EAAY2G,eACtB,wCAAW3G,EAAY4G,YAEzB,gDACA,qBAAKrE,UAAWqC,EAAQG,KAAxB,SACE,cAACpB,EAAA,EAAD,CAAWpB,UAAWqC,EAAQY,UAAW5B,UAAW,IAAKC,KAAM,EAA/D,SACGqC,MAGL,+CACA,gDACA,qBAAK3D,UAAWqC,EAAQG,KAAxB,SACE,cAACpB,EAAA,EAAD,CAAWpB,UAAWqC,EAAQY,UAAW5B,UAAW,IAAKC,KAAM,EAA/D,SACGoC,MAGL,mD,uECnIAN,EAAYd,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ8B,SAAU,GAEZtB,MAAO,CACLuB,QAAShC,EAAMiC,QAAQ,GACvBC,OAAQ,OACRC,SAAU,QAEZC,MAAO,CACLC,MAAO,IACPC,OAAQ,KAEVZ,IAAK,CACHQ,OAAQ,OACRhC,QAAS,QACTiC,SAAU,OACVI,UAAW,YAIFC,EAAQ,SAAC9G,GACpB,MAAkCG,wBAASmF,GAA3C,mBAAOyB,EAAP,KAAkBC,EAAlB,KACA,EAA8B7G,mBAAS,IAAvC,mBAAON,EAAP,KAAgBoH,EAAhB,KACA,EAA8B9G,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMyD,EAAUe,IAyBhB,OAnBAvE,qBAAU,WAAM,4CAEd,4BAAAzC,EAAA,+EAG2BF,EAAciJ,aACnClH,EAAMmH,MAAMjJ,OAAOuF,SAJzB,OAGUtE,EAHV,OAMIwG,QAAQC,IAAIzG,GACZ6H,EAAa7H,GACbwB,GAAW,GACXgF,QAAQC,IAAImB,GAThB,kDAWIpB,QAAQC,IAAR,MAXJ,2DAFc,sBACdD,QAAQC,IAAI,mBADE,mCAgBdwB,KACC,CAACpH,EAAMmH,MAAMjJ,OAAOwB,KAEnBgB,EACK,6CAGP,gCACE,uBACA,cAAC2G,EAAA,EAAD,CAAOtF,UAAWqC,EAAQW,MAA1B,SACE,eAACuC,EAAA,EAAD,CAAMC,WAAS,EAAChB,QAAS,EAAzB,UACE,eAACe,EAAA,EAAD,CAAMvB,MAAI,EAAV,UACE,cAACxC,EAAA,EAAD,UACGwD,EAAUS,aAAa9D,MAAMC,WAC5B,qBACEC,IACE,mCACAmD,EAAUS,aAAa9D,MAAMC,WAE/BE,IAAKkD,EAAUS,aAAa9D,MAAMI,QAGpC,mBAAG/B,UAAU,qBAAb,iCAVgBgF,EAAUS,aAAa9D,MAAMD,SAajD,uBACA,eAACgE,EAAA,EAAD,WACE,cAACzF,EAAA,EAAD,CAAQtC,GAAG,aAAX,kBACA,cAACsC,EAAA,EAAD,CAAQtC,GAAG,iBAAX,6BACA,cAACsC,EAAA,EAAD,CAAQtC,GAAG,gBAAX,2BAGJ,uBACA,cAAC4H,EAAA,EAAD,CAAMvB,MAAI,EAAC2B,GAAI,GAAIC,IAAE,EAACJ,WAAS,EAA/B,SACE,cAACD,EAAA,EAAD,CAAMvB,MAAI,EAAC2B,IAAE,EAACH,WAAS,EAACK,UAAU,SAASrB,QAAS,EAApD,SACE,eAACe,EAAA,EAAD,CAAMvB,MAAI,EAAC2B,IAAE,EAAb,UACE,cAACG,EAAA,EAAD,CAAYC,cAAY,EAAC7F,QAAQ,KAAjC,SACG8E,EAAUS,aAAa9D,MAAMI,QAEhC,cAAC,IAAD,CACEiE,OAAQhB,EAAUS,aAAa9D,MAAMsE,UACrCC,eAAe,SACfC,cAAe,EACfC,KAAK,WAEP,uBACA,eAACN,EAAA,EAAD,CAAY5F,QAAQ,QAAQH,MAAM,gBAAlC,6BACmBiF,EAAUS,aAAa9D,MAAMsE,aAEhD,uBACCjB,EAAUS,aAAa9D,MAAMpD,QAC5B,cAACmH,EAAA,EAAD,UACGV,EAAUS,aAAa9D,MAAMpD,QAC5ByG,EAAUS,aAAa9D,MAAMpD,OAAO8B,KAAI,SAAUtD,GAChD,OAAO,cAACkD,EAAA,EAAD,UAASlD,SAIxB,uBACA,uBACA,cAAC+I,EAAA,EAAD,CAAY5F,QAAQ,QAAQ6F,cAAY,EAAxC,SACGf,EAAUS,aAAa9D,MAAM0E,cAEhC,uBACA,eAACP,EAAA,EAAD,CAAY5F,QAAQ,QAAQH,MAAM,gBAAlC,4BACkBiF,EAAUS,aAAa9D,MAAMO,eAE9C8C,EAAUS,aAAa9D,MAAM2E,WAC5B,eAACf,EAAA,EAAD,CACEvB,MAAI,EACJ2B,IAAE,EACFH,WAAS,EACTK,UAAU,MACVU,WAAW,SACX/B,QAAS,EANX,UAQE,cAACe,EAAA,EAAD,CAAMvB,MAAI,EAAC2B,IAAE,EAAb,wBAGA,cAACJ,EAAA,EAAD,CAAMvB,MAAI,EAAC2B,IAAE,EAAb,SACE,cAACG,EAAA,EAAD,CACEC,cAAY,EACZ7F,QAAQ,QACRH,MAAM,gBAHR,SAKGiF,EAAUS,aAAa9D,MAAM2E,WAC5BtB,EAAUS,aAAa9D,MAAM2E,UAAUjG,KAAI,SACzCmG,GAEA,OAAO,4BAAIA,cAMvB,uBACA,2CACA,uBACCxB,EAAUyB,SAAS1F,OAAS,EAC3BiE,EAAUyB,SAASpG,KAAI,SAAUvC,GAC/B,OACE,gCACE,cAACwH,EAAA,EAAD,CAAOtF,UAAWqC,EAAQW,MAA1B,mBACA,6BAKN,4CAEF,uBACA,gDACA,cAACsC,EAAA,EAAD,CAAOtF,UAAWqC,EAAQW,MAA1B,SACE,uBACE0D,SAAU,SAAChH,GACTA,EAAEiH,iBACFzK,EAAc0K,WACZ3I,EAAMmH,MAAMjJ,OAAOuF,QACnB5D,GAEF+I,MAAM,kBAPV,UAUE,gCACE,uBACEC,KAAK,OACLV,KAAK,UACL3F,SAnJO,SAACsG,GAC5B7B,EAAW6B,EAAMpH,OAAOT,QAmJJA,MAAOpB,MAGX,uBAAOgJ,KAAK,SAAS5H,MAAM,gCChK1C3B,IAASyJ,KAAKjG,QAAQxD,IAAS0J,cAVb,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjB,IAAMC,EAAW,CACfC,WAAY,QACZC,cAAe,CACbpK,IAASC,KAAKoK,kBAAkBC,YAChCtK,IAASC,KAAKsK,mBAAmBD,aAEnCE,UAAW,CACTC,4BAA6B,kBAAM,KAwDxBC,MApDf,WACE,MAA0C7J,oBAAS,GAAnD,mBAAO8J,EAAP,KAAsBC,EAAtB,KAQA,OANAtJ,qBAAU,WACRtB,IAASC,OAAO4K,oBAAmB,SAAC9K,GAClC6K,IAAmB7K,QAEpB,IAGD,cAAC,IAAD,UACE,sBAAK0C,UAAU,MAAf,UACE,cAACqI,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACzC,EAAA,EAAD,CAAY5F,QAAQ,KAApB,SACE,cAAC,IAAD,CAAMuB,GAAG,UAAT,0BAEF,cAACqE,EAAA,EAAD,CAAY5F,QAAQ,KAApB,SACE,cAAC,IAAD,CAAMuB,GAAG,WAAT,uBAEDyG,EACC,cAACjI,EAAA,EAAD,CAAQF,MAAM,UAAUI,QAAS,kBAAM5C,IAASC,OAAOgL,WAAvD,sBAGE,UAGPN,EACC,qBAAKlI,UAAU,WAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyI,OAAK,EAACC,KAAK,UAAUC,UAAW3K,IACvC,cAAC,IAAD,CAAOyK,OAAK,EAACC,KAAK,mBAAmBC,UAAW5D,IAChD,cAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,OAAOC,UAAWxG,IACpC,cAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,WAAWC,UAAWvG,IACxC,cAAC,IAAD,CAAUwG,KAAK,GAAGnH,GAAG,iBAIzB,sBAAKzB,UAAU,WAAf,UACE,cAAC,EAAD,IACA,gDACA,cAAC,IAAD,CACEyH,SAAUA,EACVoB,aAActL,IAASC,kBC1EtBsL,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzK,SAAS0K,eAAe,SAM1BZ,K","file":"static/js/main.373fea62.chunk.js","sourcesContent":["function Home() {\n  return (\n    <div>\n      <h2>Welcome to the Movie Mate Recommendation Site</h2>\n      <p>\n        You can use this website to see a plethora of movies and add them to the\n        watch list!\n      </p>\n      <br></br>\n      <p>\n        You also can easily Like, Dislike, and rate the movies that you have\n        watched to improve the recommendations!\n      </p>\n    </div>\n  );\n}\n\nexport default Home;\n","import axios from \"axios\";\nimport firebase from \"firebase/app\";\nimport { ExploreResponse } from \"./models\";\n\nconst BASE_URL = \"http://localhost:4200\";\n\nclass MoviesService {\n  async explore(params: {\n    page: number;\n    q?: string;\n    maxDaysAgo?: number;\n    genre?: string;\n  }): Promise<ExploreResponse> {\n    const token = await this.getToken();\n\n    const searchParams = new URLSearchParams();\n    if (params.page) searchParams.set(\"page\", params.page.toString());\n    if (params.q) searchParams.set(\"q\", params.q);\n    if (params.maxDaysAgo)\n      searchParams.set(\"maxDaysAgo\", params.maxDaysAgo.toString());\n    if (params.genre) searchParams.set(\"genre\", params.genre);\n\n    const response = await axios.get(\n      `${BASE_URL}/movies/explore?${searchParams}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return response.data;\n  }\n\n  async getGenres(): Promise<string[]> {\n    const token = await this.getToken();\n\n    const response = await axios.get(`${BASE_URL}/movies/genres`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  }\n\n  private async getToken(): Promise<string> {\n    try {\n      const user = firebase.auth().currentUser;\n      return await user.getIdToken();\n    } catch (e) {\n      return null;\n    }\n  }\n\n  async getMovieByID(id: number) {\n    const token = await this.getToken();\n    const response = await axios.get(`${BASE_URL}/movies/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  }\n  async addComment(id: number, Enteredcomment: String) {\n    const token = await this.getToken();\n    const response = await axios.post(`${BASE_URL}/movies/${id}/comments`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      comment: Enteredcomment,\n    });\n    return response.data;\n  }\n}\n\nexport const moviesService = new MoviesService();\n","import { LinearProgress, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { Pager, SearchResult } from \"../models\";\nimport { moviesService } from \"../movies.service\";\nimport ImageList from \"@material-ui/core/ImageList\";\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\nimport ImageListItemBar from \"@material-ui/core/ImageListItemBar\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Button from \"@material-ui/core/Button\";\n\nlet timer = null;\n\nexport const Movies = (props) => {\n  const location = useLocation();\n  const [results, setResults] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [pager, setPager] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const response = await moviesService.getGenres();\n      setGenres(response);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const params = new URLSearchParams(location.search);\n      const page = +params.get(\"page\") || 1;\n      const q = params.get(\"q\");\n      const genre = params.get(\"genre\");\n      const input = document.querySelector(\"input\");\n      input.value = q;\n\n      const searchParams = { page, maxDaysAgo: 180 };\n\n      if (q || genre) {\n        delete searchParams[\"maxDaysAgo\"];\n\n        if (q) searchParams[\"q\"] = q;\n        if (genre) searchParams[\"genre\"] = genre;\n      }\n\n      setLoading(true);\n      const response = await moviesService.explore(searchParams);\n      setLoading(false);\n      setPager(response.pager);\n      setResults(response.searchResults);\n    })();\n  }, [location.search]);\n\n  const search = (e) => {\n    if (timer) {\n      window.clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      const q = e.target.value;\n\n      const params = new URLSearchParams(location.search);\n\n      if (!q) {\n        params.delete(\"q\");\n      } else {\n        params.set(\"q\", q);\n        params.set(\"page\", \"1\");\n      }\n\n      props.history.replace(`/movies?${params}`);\n    }, 500);\n  };\n\n  const changePage = (_: any, page: number) => {\n    const params = new URLSearchParams(location.search);\n    params.set(\"page\", page.toString());\n    props.history.replace(`/movies?${params}`);\n  };\n\n  const selectGenre = (e) => {\n    const params = new URLSearchParams(location.search);\n    params.set(\"genre\", e.target.textContent.toLowerCase());\n    props.history.replace(`/movies?${params}`);\n  };\n\n  const deselectGenre = (e) => {\n    const params = new URLSearchParams(location.search);\n    params.delete(\"genre\");\n    props.history.replace(`/movies?${params}`);\n  };\n\n  return (\n    <div>\n      <div>\n        {loading ? (\n          <LinearProgress color=\"secondary\" />\n        ) : (\n          <div className=\"progress-placeholder\"></div>\n        )}\n      </div>\n\n      <div className=\"chips\">\n        <Button variant=\"contained\" color=\"primary\" onClick={deselectGenre}>\n          Clear Genre\n        </Button>\n        {genres.map((genre) => {\n          return <Chip key={genre} label={genre} onClick={selectGenre} />;\n        })}\n      </div>\n\n      <TextField\n        label=\"Search Movies\"\n        variant=\"outlined\"\n        onChange={search}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n\n      {pager && results.length ? (\n        <Pagination\n          page={(pager as Pager)?.currentPage}\n          count={(pager as Pager)?.totalPages}\n          onChange={changePage}\n        />\n      ) : null}\n\n      <div>\n        {!loading && !results.length && location.search ? (\n          <p>No Results</p>\n        ) : null}\n      </div>\n\n      <ImageList rowHeight={400} cols={6}>\n        {results.map((result: SearchResult) => (\n          <ImageListItem key={result.movieId}>\n            <Link to={\"movies/\" + result.movieId}>\n              {result.movie.posterPath ? (\n                <img\n                  src={\n                    \"https://image.tmdb.org/t/p/w500/\" + result.movie.posterPath\n                  }\n                  alt={result.movie.title}\n                />\n              ) : (\n                <p className=\"no-image-available\">No image available</p>\n              )}\n\n              <ImageListItemBar\n                title={result.movie.title}\n                subtitle={<span>{result.movie.releaseYear}</span>}\n              />\n            </Link>\n          </ImageListItem>\n        ))}\n      </ImageList>\n      <br></br>\n      {pager && results.length ? (\n        <Pagination\n          page={(pager as Pager)?.currentPage}\n          count={(pager as Pager)?.totalPages}\n          onChange={changePage}\n        />\n      ) : null}\n    </div>\n  );\n};\n","export const NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n","import { useEffect, useState } from \"react\";\nimport { LinearProgress } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport firebase from \"firebase/app\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ImageList from \"@material-ui/core/ImageList\";\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\nimport ImageListItemBar from \"@material-ui/core/ImageListItemBar\";\nimport { Link } from \"react-router-dom\";\n// import IconButton from \"@material-ui/core/IconButton\";\n\nexport const UserProfile = (props) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      overflow: \"hidden\",\n      backgroundColor: theme.palette.background.paper,\n    },\n    imageList: {\n      flexWrap: \"nowrap\",\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: \"translateZ(0)\",\n    },\n    title: {\n      color: \"black\",\n    },\n    titleBar: {\n      background: \"white\",\n    },\n  }));\n\n  const classes = useStyles();\n  const [currentUser] = useState(firebase.auth().currentUser);\n  const [loading, setLoading] = useState(false);\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(undefined);\n  let wishList = null;\n  let favorites = null;\n\n  useEffect(() => {\n    (async () => {\n      console.log(userData);\n      console.log(currentUser);\n      try {\n        setLoading(true);\n        const { data } = await axios.get(`/users/${currentUser.uid}`);\n        console.log(data);\n        setUserData(data);\n        setLoading(false);\n      } catch (e) {\n        setError(e.messages);\n        console.log(error);\n      }\n    })();\n  }, [currentUser, userData, error]);\n\n  const buildWishListItem = (result) => {\n    return (\n      <ImageListItem key={result.movieId}>\n        <Link to={\"movies/\" + result.movieId}>\n          {result.img ? (\n            <img src={result.img} alt={result.title} />\n          ) : (\n            <p className=\"no-image-available\">No image available</p>\n          )}\n\n          <ImageListItemBar\n            title={`${result.title} (${result.year})`}\n            classes={{\n              root: classes.titleBar,\n              title: classes.title,\n            }}\n          />\n        </Link>\n      </ImageListItem>\n    );\n  };\n\n  const buildFavListItem = (result) => {\n    return (\n      <ImageListItem key={result.movieId}>\n        <Link to={\"movies/\" + result.movieId}>\n          {result.img ? (\n            <img src={result.img} alt={result.title} />\n          ) : (\n            <p className=\"no-image-available\">No image available</p>\n          )}\n\n          <ImageListItemBar\n            title={`${result.title} (${result.year})`}\n            classes={{\n              root: classes.titleBar,\n              title: classes.title,\n            }}\n          />\n        </Link>\n      </ImageListItem>\n    );\n  };\n\n  if (userData.wishList) {\n    wishList =\n      userData &&\n      userData.wishList.map((item) => {\n        return buildWishListItem(item);\n      });\n  }\n\n  if (userData.favorites) {\n    favorites =\n      userData &&\n      userData.favorites.map((item) => {\n        return buildFavListItem(item);\n      });\n  }\n\n  return (\n    <div>\n      <div>\n        {loading ? (\n          <LinearProgress color=\"secondary\" />\n        ) : (\n          <div className=\"progress-placeholder\"></div>\n        )}\n      </div>\n      <div className=\"profile-header\">\n        <img src={currentUser.photoURL} alt=\"Profile\" />\n        <p>Name: {currentUser.displayName}</p>\n        <p>Email: {currentUser.email}</p>\n      </div>\n      <h2> My Favorites </h2>\n      <div className={classes.root}>\n        <ImageList className={classes.imageList} rowHeight={350} cols={4}>\n          {favorites}\n        </ImageList>\n      </div>\n      <p>{` << Scroll >> `}</p>\n      <h2> My Wish List </h2>\n      <div className={classes.root}>\n        <ImageList className={classes.imageList} rowHeight={350} cols={4}>\n          {wishList}\n        </ImageList>\n      </div>\n      <p>{` << Scroll >> `}</p>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { moviesService } from \"../movies.service\";\nimport StarRatings from \"react-star-ratings\";\n\nimport {\n  Grid,\n  makeStyles,\n  Typography,\n  Paper,\n  ButtonGroup,\n  Button,\n  ImageListItem,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: \"auto\",\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport const Movie = (props) => {\n  const [movieData, setMovieData] = useState(undefined);\n  const [comment, setComment] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const classes = useStyles();\n\n  const handleChangedComment = (event) => {\n    setComment(event.target.value);\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect fired\");\n    async function fetchData() {\n      try {\n        //grab the id of the show and then display all of its information\n        const response = await moviesService.getMovieByID(\n          props.match.params.movieId\n        );\n        console.log(response);\n        setMovieData(response);\n        setLoading(false);\n        console.log(movieData);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fetchData();\n  }, [props.match.params.id]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div>\n      <br></br>\n      <Paper className={classes.paper}>\n        <Grid container spacing={3}>\n          <Grid item>\n            <ImageListItem key={movieData.movieDetails.movie.movieId}>\n              {movieData.movieDetails.movie.posterPath ? (\n                <img\n                  src={\n                    \"https://image.tmdb.org/t/p/w500/\" +\n                    movieData.movieDetails.movie.posterPath\n                  }\n                  alt={movieData.movieDetails.movie.title}\n                />\n              ) : (\n                <p className=\"no-image-available\">No image available</p>\n              )}\n            </ImageListItem>\n            <br></br>\n            <ButtonGroup>\n              <Button id=\"likeButton\">Like</Button>\n              <Button id=\"wishlistButton\">Add to Wishlist</Button>\n              <Button id=\"dislikeButton\">Dislike</Button>\n            </ButtonGroup>\n          </Grid>\n          <br></br>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"h2\">\n                  {movieData.movieDetails.movie.title}\n                </Typography>\n                <StarRatings\n                  rating={movieData.movieDetails.movie.avgRating}\n                  starRatedColor=\"yellow\"\n                  numberOfStars={5}\n                  name=\"rating\"\n                />\n                <br></br>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Average Rating: {movieData.movieDetails.movie.avgRating}\n                </Typography>\n                <br></br>\n                {movieData.movieDetails.movie.genres && (\n                  <ButtonGroup>\n                    {movieData.movieDetails.movie.genres &&\n                      movieData.movieDetails.movie.genres.map(function (genre) {\n                        return <Button>{genre}</Button>;\n                      })}\n                  </ButtonGroup>\n                )}\n                <br></br>\n                <br></br>\n                <Typography variant=\"body2\" gutterBottom>\n                  {movieData.movieDetails.movie.plotSummary}\n                </Typography>\n                <br></br>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Year Released: {movieData.movieDetails.movie.releaseYear}\n                </Typography>\n                {movieData.movieDetails.movie.directors && (\n                  <Grid\n                    item\n                    xs\n                    container\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    spacing={2}\n                  >\n                    <Grid item xs>\n                      Directors:\n                    </Grid>\n                    <Grid item xs>\n                      <Typography\n                        gutterBottom\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        {movieData.movieDetails.movie.directors &&\n                          movieData.movieDetails.movie.directors.map(function (\n                            director\n                          ) {\n                            return <p>{director}</p>;\n                          })}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                )}\n                <br></br>\n                <h3>Comments:</h3>\n                <br></br>\n                {movieData.comments.length > 0 ? (\n                  movieData.comments.map(function (comment) {\n                    return (\n                      <div>\n                        <Paper className={classes.paper}>Hello</Paper>\n                        <br></br>\n                      </div>\n                    );\n                  })\n                ) : (\n                  <p>No comments</p>\n                )}\n                <br></br>\n                <h3>Add a comment:</h3>\n                <Paper className={classes.paper}>\n                  <form\n                    onSubmit={(e) => {\n                      e.preventDefault();\n                      moviesService.addComment(\n                        props.match.params.movieId,\n                        comment\n                      );\n                      alert(\"Comment Added\");\n                    }}\n                  >\n                    <label>\n                      <input\n                        type=\"text\"\n                        name=\"comment\"\n                        onChange={handleChangedComment}\n                        value={comment}\n                      ></input>\n                    </label>\n                    <input type=\"submit\" value=\"Submit\"></input>\n                  </form>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase/app\";\nimport Home from \"./Components/Home\";\nimport \"firebase/auth\";\nimport \"./App.css\";\nimport { Movies } from \"./Components/Movies\";\nimport { NotFound } from \"./Components/NotFound\";\nimport { UserProfile } from \"./Components/UserProfile\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Movie } from \"./Components/Movie\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDYk4I-2c5E72cvb_wJwg3syt7xjrAssQg\",\n  authDomain: \"movie-mate-43364.firebaseapp.com\",\n  projectId: \"movie-mate-43364\",\n  storageBucket: \"movie-mate-43364.appspot.com\",\n  messagingSenderId: \"174076031402\",\n  appId: \"1:174076031402:web:a5609b82cf4905d55c3bd3\",\n  measurementId: \"G-54RM0PJWCW\",\n};\n\nif (!firebase.apps.length) firebase.initializeApp(firebaseConfig);\n\nconst uiConfig = {\n  signInFlow: \"popup\",\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false,\n  },\n};\n\nfunction App() {\n  const [authenticated, setAuthenticated] = useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setAuthenticated(!!user);\n    });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\">\n              <Link to=\"/movies\">Movie Mate</Link>\n            </Typography>\n            <Typography variant=\"h6\">\n              <Link to=\"/profile\">Profile</Link>\n            </Typography>\n            {authenticated ? (\n              <Button color=\"inherit\" onClick={() => firebase.auth().signOut()}>\n                Sign-out\n              </Button>\n            ) : null}\n          </Toolbar>\n        </AppBar>\n        {authenticated ? (\n          <div className=\"App-body\">\n            <Switch>\n              <Route exact path=\"/movies\" component={Movies} />\n              <Route exact path=\"/movies/:movieId\" component={Movie} />\n              <Route exact path=\"/404\" component={NotFound} />\n              <Route exact path=\"/profile\" component={UserProfile} />\n              <Redirect from=\"\" to=\"/movies\" />\n            </Switch>\n          </div>\n        ) : (\n          <div className=\"App-body\">\n            <Home></Home>\n            <p>Please sign-in:</p>\n            <StyledFirebaseAuth\n              uiConfig={uiConfig}\n              firebaseAuth={firebase.auth()}\n            />\n          </div>\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}